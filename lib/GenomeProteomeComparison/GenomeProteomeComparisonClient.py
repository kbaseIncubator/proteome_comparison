# -*- coding: utf-8 -*-
############################################################
#
# Autogenerated by the KBase type compiler -
# any changes made here will be overwritten
#
############################################################

from __future__ import print_function
# the following is a hack to get the baseclient to import whether we're in a
# package or not. This makes pep8 unhappy hence the annotations.
try:
    # baseclient and this client are in a package
    from .baseclient import BaseClient as _BaseClient  # @UnusedImport
except ImportError:
    # no they aren't
    from baseclient import BaseClient as _BaseClient  # @Reimport


class GenomeProteomeComparison(object):

    def __init__(
            self, url=None, timeout=30 * 60, user_id=None,
            password=None, token=None, ignore_authrc=False,
            trust_all_ssl_certificates=False,
            auth_svc='https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login'):
        if url is None:
            raise ValueError('A url is required')
        self._service_ver = None
        self._client = _BaseClient(
            url, timeout=timeout, user_id=user_id, password=password,
            token=token, ignore_authrc=ignore_authrc,
            trust_all_ssl_certificates=trust_all_ssl_certificates,
            auth_svc=auth_svc)

    def blast_proteomes(self, input, context=None):
        """
        :param input: instance of type "blast_proteomes_params" (string
           genome1ws - workspace of genome1 string genome1id - id of genome1
           string genome2ws - workspace of genome2 string genome2id - id of
           genome2 float sub_bbh_percent - optional parameter, minimum
           percent of bit score compared to best bit score, default is 90
           string max_evalue -  optional parameter, maximum evalue, default
           is 1e-10 string output_ws - workspace of output object string
           output_id - future id of output object) -> structure: parameter
           "genome1ws" of String, parameter "genome1id" of String, parameter
           "genome2ws" of String, parameter "genome2id" of String, parameter
           "sub_bbh_percent" of Double, parameter "max_evalue" of String,
           parameter "output_ws" of String, parameter "output_id" of String
        :returns: instance of type "ws_protcmp_id" (A workspace ID that
           references a Genome data object. @id ws ProteomeComparison)
        """
        return self._client.call_method('GenomeProteomeComparison.blast_proteomes',
                                        [input], self._service_ver, context)

    def status(self, context=None):
        return self._client.call_method('GenomeProteomeComparison.status',
                                        [], self._service_ver, context)
